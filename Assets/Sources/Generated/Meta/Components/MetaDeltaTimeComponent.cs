//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity deltaTimeEntity { get { return GetGroup(MetaMatcher.DeltaTime).GetSingleEntity(); } }
    public DeltaTimeComponent deltaTime { get { return deltaTimeEntity.deltaTime; } }
    public bool hasDeltaTime { get { return deltaTimeEntity != null; } }

    public MetaEntity SetDeltaTime(float newValue) {
        if (hasDeltaTime) {
            throw new Entitas.EntitasException("Could not set DeltaTime!\n" + this + " already has an entity with DeltaTimeComponent!",
                "You should check if the context already has a deltaTimeEntity before setting it or use context.ReplaceDeltaTime().");
        }
        var entity = CreateEntity();
        entity.AddDeltaTime(newValue);
        return entity;
    }

    public void ReplaceDeltaTime(float newValue) {
        var entity = deltaTimeEntity;
        if (entity == null) {
            entity = SetDeltaTime(newValue);
        } else {
            entity.ReplaceDeltaTime(newValue);
        }
    }

    public void RemoveDeltaTime() {
        deltaTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public DeltaTimeComponent deltaTime { get { return (DeltaTimeComponent)GetComponent(MetaComponentsLookup.DeltaTime); } }
    public bool hasDeltaTime { get { return HasComponent(MetaComponentsLookup.DeltaTime); } }

    public void AddDeltaTime(float newValue) {
        var index = MetaComponentsLookup.DeltaTime;
        var component = CreateComponent<DeltaTimeComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDeltaTime(float newValue) {
        var index = MetaComponentsLookup.DeltaTime;
        var component = CreateComponent<DeltaTimeComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDeltaTime() {
        RemoveComponent(MetaComponentsLookup.DeltaTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherDeltaTime;

    public static Entitas.IMatcher<MetaEntity> DeltaTime {
        get {
            if (_matcherDeltaTime == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.DeltaTime);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherDeltaTime = matcher;
            }

            return _matcherDeltaTime;
        }
    }
}
