//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity physicsServiceEntity { get { return GetGroup(MetaMatcher.PhysicsService).GetSingleEntity(); } }
    public PhysicsServiceComponent physicsService { get { return physicsServiceEntity.physicsService; } }
    public bool hasPhysicsService { get { return physicsServiceEntity != null; } }

    public MetaEntity SetPhysicsService(IPhysics newInstance) {
        if (hasPhysicsService) {
            throw new Entitas.EntitasException("Could not set PhysicsService!\n" + this + " already has an entity with PhysicsServiceComponent!",
                "You should check if the context already has a physicsServiceEntity before setting it or use context.ReplacePhysicsService().");
        }
        var entity = CreateEntity();
        entity.AddPhysicsService(newInstance);
        return entity;
    }

    public void ReplacePhysicsService(IPhysics newInstance) {
        var entity = physicsServiceEntity;
        if (entity == null) {
            entity = SetPhysicsService(newInstance);
        } else {
            entity.ReplacePhysicsService(newInstance);
        }
    }

    public void RemovePhysicsService() {
        physicsServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public PhysicsServiceComponent physicsService { get { return (PhysicsServiceComponent)GetComponent(MetaComponentsLookup.PhysicsService); } }
    public bool hasPhysicsService { get { return HasComponent(MetaComponentsLookup.PhysicsService); } }

    public void AddPhysicsService(IPhysics newInstance) {
        var index = MetaComponentsLookup.PhysicsService;
        var component = CreateComponent<PhysicsServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplacePhysicsService(IPhysics newInstance) {
        var index = MetaComponentsLookup.PhysicsService;
        var component = CreateComponent<PhysicsServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemovePhysicsService() {
        RemoveComponent(MetaComponentsLookup.PhysicsService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherPhysicsService;

    public static Entitas.IMatcher<MetaEntity> PhysicsService {
        get {
            if (_matcherPhysicsService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.PhysicsService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherPhysicsService = matcher;
            }

            return _matcherPhysicsService;
        }
    }
}
