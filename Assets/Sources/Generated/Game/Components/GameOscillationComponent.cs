//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Oscillation oscillation { get { return (Oscillation)GetComponent(GameComponentsLookup.Oscillation); } }
    public bool hasOscillation { get { return HasComponent(GameComponentsLookup.Oscillation); } }

    public void AddOscillation(float newFrequency, float newAmplitude, float newTime) {
        var index = GameComponentsLookup.Oscillation;
        var component = CreateComponent<Oscillation>(index);
        component.frequency = newFrequency;
        component.amplitude = newAmplitude;
        component.time = newTime;
        AddComponent(index, component);
    }

    public void ReplaceOscillation(float newFrequency, float newAmplitude, float newTime) {
        var index = GameComponentsLookup.Oscillation;
        var component = CreateComponent<Oscillation>(index);
        component.frequency = newFrequency;
        component.amplitude = newAmplitude;
        component.time = newTime;
        ReplaceComponent(index, component);
    }

    public void RemoveOscillation() {
        RemoveComponent(GameComponentsLookup.Oscillation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOscillation;

    public static Entitas.IMatcher<GameEntity> Oscillation {
        get {
            if (_matcherOscillation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Oscillation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOscillation = matcher;
            }

            return _matcherOscillation;
        }
    }
}
